{"name":"Buienradar","type":"virtual_device","properties":{"deviceIcon":1009,"categories":"[\"other\"]","currentIcon":"1009","log":"","logTemp":"","mainLoop":"local debug = true;\nlocal url = \"gpsgadget.buienradar.nl\";\nlocal beforeRain = 15; -- in minutes, time to send message before rain\nlocal afterRain = 15; -- in mintues, time to set Buienradar to 0\nlocal zonnescherm = {true,{807}};\nlocal Remko = json.decode(fibaro:getGlobalValue(\"Remko\"))\nlocal sendMessageID = tonumber(fibaro:getGlobalValue(\"sendMessage\"))\nlocal prio = \"0\"; -- priority of pushmessage, only used for Pushover\nlocal startTime = \"07:00\" -- time to start messages\nlocal stopTime = \"23:00\"; -- time to stop messages\nlocal runTime = 5; -- in minutes\n\nlocal version = \"1.0.1\"\nlocal selfId = fibaro:getSelfId();\nlocal currentTime = os.date(\"%H:%M\");\nlocal currentDate = os.date(\"*t\");\nlocal label = \"\";\nlocal msg = \"\";\nlocal raintime = \"\";\n\nlocal function log(str) if debug then fibaro:debug(tostring(str)); end; end\nlocal function errorlog(str) fibaro:debug(\"<font color='red'>\"..tostring(str)..\"</font>\"); end\n\nfunction round(val, decimal)\n  if (decimal) then\n    return math.floor( (val * 10^decimal) + 0.5) / (10^decimal)\n  else\n    return math.floor(val+0.5)\n  end\nend\n\nfunction latlon()\n  if HC2 == nil then\n    HC2 = Net.FHttp(\"127.0.0.1\",11111);\n  end\n  local response ,status, err = HC2:GET(\"/api/settings/location\");\n  if (tonumber(status) == 200 and tonumber(err)==0) then\n    if response and response ~= \"\" and response ~= nil then\n      jsonTable = json.decode(response)\n      latitude = round(jsonTable.latitude,2)\n      longitude = round(jsonTable.longitude,2)\n    end\n  end\nend\n\nfunction globalVar(var)\n  if fibaro:getGlobalValue(var) ~= nil and fibaro:getGlobalValue(var) ~= \"\" then\n    return fibaro:getGlobalValue(var)\n  else\n    if HC2 == nil then\n      HC2 = Net.FHttp(\"127.0.0.1\",11111);\n    end\n    local response ,status, err = HC2:POST('/api/globalVariables','{\"name\":\"'..var..'\",\"value\":\"0\"}');\n    if (tonumber(err)==0) and response and response ~= \"\" and response ~= nil then\n      log(\"Global variable \"..var..\" created\");\n    end\n    return \"0\"\n  end\nend\n\nfunction trim(s)\n  return (s:gsub(\"^%s*(.-)%s*$\", \"%1\"))\nend\n\nfunction split(s, pattern, maxsplit)\n  local pattern = pattern or ' '\n  local maxsplit = maxsplit or -1\n  local s = s\n  local t = {}\n  local patsz = #pattern\n  while maxsplit ~= 0 do\n    local curpos = 1\n    local found = string.find(s, pattern)\n    if found ~= nil then\n      table.insert(t, string.sub(s, curpos, found - 1))\n      curpos = found + patsz\n      s = string.sub(s, curpos)\n    else\n      table.insert(t, string.sub(s, curpos))\n      break\n    end\n    maxsplit = maxsplit - 1\n    if maxsplit == 0 then\n      table.insert(t, string.sub(s, curpos - patsz - 1))\n    end\n  end\n  return t\nend\n\nfunction checkRain()\n  rain = false;\n  raintime = \"\";\n  if BR == nil then\n    BR = Net.FHttp(url,80);\n  end\n  \n  log(\"http://\"..url..\"/data/raintext?lat=\"..latitude..\"&lon=\"..longitude)\n\n  local response, status, err = BR:GET(\"/data/raintext?lat=\"..latitude..\"&lon=\"..longitude);\n  if (tonumber(status) == 200 and tonumber(err)==0) then\n    if response and response ~= \"\" and response ~= nil then\n      log(\"Gegevens opgehaald\");\n      fibaro:log(\"Getting data...\")\n      response = trim(response)\n      --log(response)\n      responseTable = split(response, \"\\n\")\n      local values = 0;\n      for i=1, (#responseTable) do\n        rainT = responseTable[i]:sub(1,3)\n        timeT = responseTable[i]:sub(5,9)\n        log(\"timeT: \"..timeT..\", rainT:\"..rainT)\n        if tonumber(timeT:sub(1,2)) <= 2 then\n          timeTN = tostring(tonumber(timeT:sub(1,2)) + 24) .. timeT:sub(3)\n        else\n          timeTN = timeT\n        end\n        if (currentTime <= timeT or currentTime <= timeTN) and values < 13 then\n          log(timeT..\":\"..rainT)\n          values = values + 1\n          rainfall = round(10^((tonumber(rainT)-109)/32),3)\n          if rainfall > 0 and tonumber(rainT) > 77 then\n            if rainfall >= 1 or tonumber(responseTable[i+1]:sub(1, 3)) > 77 then\n              rain = true\n              if raintime == \"\" then\n                raintime = timeT;\n                log(raintime)\n              end\n            end\n          end\n          fibaro:call(selfId, \"setProperty\", \"ui.lblBuienradar\"..values..\".value\", timeT .. \": \" .. string.format(\"%.3f\", rainfall))\n          label = label .. timeT .. \": \" .. rainfall .. \"%0A\"\n        end\n      end\n      fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"\");\n      fibaro:call(selfId, \"setProperty\", \"ui.lbllastUpdate.value\", os.date(\"%c\"));\n      return true\n    else\n      fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"Error getting data\");\n      errorlog(\"Result is nil or empty\")\n      return false\n    end\n  else\n    fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"Error getting data\");\n    errorlog(\"error: \"..err)\n    errorlog(\"status: \"..status)\n    return false\n  end\nend\n\nlatlon()\nbuienradar = globalVar(\"Buienradar\")\nlog(\"buienradar: \"..buienradar)\n\nif checkRain() then\n  log(rain)\n  if rain and buienradar == \"0\" then\n    log(\"rain and 0\")\n    counter = 1\n    while counter <= math.floor(beforeRain/runTime) and rain do\n      log(\"rain and counter: \"..counter)\n      fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Expected at \"..raintime);\n      counter = counter + 1\n      fibaro:sleep(runTime*60*1000)\n      tmp = checkRain()\n      log(rain)\n    end\n    if rain then\n      log(\"rain\")\n      fibaro:setGlobal(\"Buienradar\", raintime)\n      if currentTime >= startTime and currentTime <= stopTime then\n        msg = \"Regen om \"..raintime\n        fibaro:startScene(sendMessageID,{{true, {Remko[\"phoneid\"]}},{false},{false},{true, \"100\"},{false},\"Buienradar\",msg})\n        log(msg)\n        if zonnescherm[1] == true then\n          for i=1, #zonnescherm[2] do\n            if tonumber(fibaro:getValue(zonnescherm[2][i], \"value\")) > 0 then\n              fibaro:call(zonnescherm[2][i], \"setValue\", \"0\")\n              log(\"Zonnescherm (\"..zonnescherm[2][i]..\") gesloten\")\n            end\n          end\n        end\n      end\n      fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Expected at \"..raintime);\n    end\n  elseif not rain and buienradar == \"0\" then\n    log(\"not rain and 0\")\n    fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Not expected\");\n  elseif rain and buienradar ~= \"0\" then\n    log(\"rain and 1\")\n    fibaro:setGlobal(\"Buienradar\", raintime)\n    fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Expected at \"..raintime);\n  elseif not rain and buienradar ~= \"0\" then\n    log(\"no rain and 1\")\n    counter = 1\n    while counter < math.floor(afterRain/runTime) and not rain do\n      log(\"no rain and counter: \"..counter)\n      fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Not expected\");\n      counter = counter + 1\n      fibaro:sleep(runTime*60*1000)\n      tmp = checkRain()\n      log(rain)\n    end\n    if not rain then\n      log(\"not rain\")\n      fibaro:setGlobal(\"Buienradar\", \"0\")     \n      fibaro:call(selfId, \"setProperty\", \"ui.lblOverview.value\", \"Not expected\");\n      msg = \"Geen regen verwacht\"\n      fibaro:startScene(sendMessageID,{{true, {Remko[\"phoneid\"]}},{false},{false},{true, \"100\"},{false},\"Buienradar\",msg})\n      log(msg)\n    end\n  end\n  fibaro:log(\"transfer ok\")\nend\n\nfibaro:sleep(runTime*60*1000)","ui.lblBuienradar1.value":"19:35: 3.398","ui.lblBuienradar10.value":"20:20: 0.000","ui.lblBuienradar11.value":"20:25: 0.000","ui.lblBuienradar12.value":"20:30: 0.000","ui.lblBuienradar13.value":"20:35: 0.000","ui.lblBuienradar2.value":"19:40: 4.870","ui.lblBuienradar3.value":"19:45: 3.398","ui.lblBuienradar4.value":"19:50: 0.000","ui.lblBuienradar5.value":"19:55: 0.000","ui.lblBuienradar6.value":"20:00: 0.000","ui.lblBuienradar7.value":"20:05: 0.000","ui.lblBuienradar8.value":"20:10: 0.000","ui.lblBuienradar9.value":"20:15: 0.000","ui.lblError.value":"","ui.lblOverview.value":"Expected at 19:35","ui.lbllastUpdate.value":"Tue Aug 13 19:32:57 2019","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Showers","name":"lblOverview","favourite":false,"main":true}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar1","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar2","favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar3","favourite":false,"main":false}]},{"type":"label","elements":[{"id":5,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar4","favourite":false,"main":false}]},{"type":"label","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar5","favourite":false,"main":false}]},{"type":"label","elements":[{"id":7,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar6","favourite":false,"main":false}]},{"type":"label","elements":[{"id":8,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar7","favourite":false,"main":false}]},{"type":"label","elements":[{"id":9,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar8","favourite":false,"main":false}]},{"type":"label","elements":[{"id":10,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar9","favourite":false,"main":false}]},{"type":"label","elements":[{"id":11,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar10","favourite":false,"main":false}]},{"type":"label","elements":[{"id":12,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar11","favourite":false,"main":false}]},{"type":"label","elements":[{"id":13,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar12","favourite":false,"main":false}]},{"type":"label","elements":[{"id":14,"lua":false,"waitForResponse":false,"caption":"","name":"lblBuienradar13","favourite":false,"main":false}]},{"type":"label","elements":[{"id":15,"lua":false,"waitForResponse":false,"caption":"","name":"lbllastUpdate","favourite":false,"main":false}]},{"type":"label","elements":[{"id":16,"lua":false,"waitForResponse":false,"caption":"","name":"lblError","favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}
