{"name":"BeeClear","type":"virtual_device","properties":{"deviceIcon":1002,"categories":"[\"other\"]","currentIcon":"1002","log":"Error getting data...","logTemp":"TxtGreen","mainLoop":"local selfId = fibaro:getSelfId();\nfibaro:debug(os.date(\"%c\"))\nfibaro:call(selfId, \"pressButton\", \"5\"); -- update knop\nfibaro:sleep(1*60*1000) -- elke minuut","ui.lblActueel.value":"","ui.lblError.value":"Error getting data","ui.lblGas.value":"","ui.lblHoog.value":"","ui.lblLaag.value":"","ui.lbllastUpdate.value":"","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Huidig verbruik","name":"lblActueel","favourite":false,"main":false}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Laag verbruik","name":"lblLaag","favourite":false,"main":false}]},{"type":"label","elements":[{"id":3,"lua":false,"waitForResponse":false,"caption":"Hoog verbruik","name":"lblHoog","favourite":false,"main":false}]},{"type":"label","elements":[{"id":4,"lua":false,"waitForResponse":false,"caption":"Gas","name":"lblGas","favourite":false,"main":false}]},{"type":"button","elements":[{"id":5,"lua":true,"waitForResponse":false,"caption":"Update","name":"btnUpdate","empty":false,"msg":"local selfId = fibaro:getSelfId();\nlocal ip = fibaro:get(selfId, 'IPAddress');\nlocal port = fibaro:get(selfId, 'TCPPort');\n\nfibaro:debug(os.time())\n\nif httpSocket == nil then\n  httpSocket = Net.FHttp(ip, port);\nend\n\n-- eenmalig http://{BeeClear}/bc_security?set=off runnen in de bbrowser om sessie security uit te zetten\nlocal url = \"/bc_current\"\n\n-- ophalen JSON info\nfibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"Getting data...\");\nfibaro:log(\"Getting data...\");\nresponse, status, errorCode = httpSocket:GET(url)\nif tonumber(status) == 200 and tonumber(errorCode) == 0 and response and response ~= \"\"\nthen\n  arrData = json.decode(response);\n  fibaro:debug(response)\n  fibaro:debug(arrData.u)\n  if arrData and arrData ~= \"\" then\n    -- zet resultaten in de labels\n    if arrData.u then fibaro:call(selfId, \"setProperty\", \"ui.lblActueel.value\", tostring(tonumber(arrData.u)*1000)..\" Watt\"); end\n    if arrData.ul then fibaro:call(selfId, \"setProperty\", \"ui.lblLaag.value\", tostring(tonumber(arrData.ul)/1000)..\" kWh\"); end\n    if arrData.uh then fibaro:call(selfId, \"setProperty\", \"ui.lblHoog.value\", tostring(tonumber(arrData.uh)/1000)..\" kWh\"); end\n    if arrData.gas[1] then fibaro:call(selfId, \"setProperty\", \"ui.lblGas.value\", tostring(tonumber(arrData.gas[1])/1000)..\" m3\"); end\n    fibaro:call(selfId, \"setProperty\", \"ui.lbllastUpdate.value\", os.date(\"%c\"));\n    fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"\");\n    fibaro:debug(os.date(\"%c\"))\n    fibaro:log(\"transfer ok\");\n  else\n    fibaro:debug(\"Error getting data...\");\n    fibaro:log(\"Error getting data...\");\n    fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"Error getting data\");\n  end\nelse\n  fibaro:debug(\"error: \"..status..\",\"..errorCode);\n  fibaro:log(\"Error getting data...\");\n  fibaro:call(selfId, \"setProperty\", \"ui.lblError.value\", \"Error getting data\");\nend","buttonIcon":1002,"favourite":false,"main":false}]},{"type":"label","elements":[{"id":6,"lua":false,"waitForResponse":false,"caption":"","name":"lbllastUpdate","favourite":false,"main":false}]},{"type":"label","elements":[{"id":7,"lua":false,"waitForResponse":false,"caption":"","name":"lblError","favourite":false,"main":false}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}